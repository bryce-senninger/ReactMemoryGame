{"version":3,"sources":["components/cards/index.jsx","components/Title/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["DogCard","props","className","onClick","handleIncrement","id","key","alt","name","src","image","Title","children","showInstructions","score","highScore","Wrapper","App","state","options","play","find","Param","i","count","setState","console","log","this","sort","Math","random","playBark","gameOver","playWhine","length","document","getElementById","alert","map","option","Component","ReactDOM","render"],"mappings":"qhCAmBeA,MAhBf,SAAiBC,GACf,OACE,6BACE,yBAAKC,UAAU,QACb,yBACEC,QAAS,kBAAMF,EAAMG,gBAAgBH,EAAMI,KAC3CC,IAAKL,EAAMI,GACXA,GAAIJ,EAAMI,GACVE,IAAKN,EAAMO,KACXC,IAAKR,EAAMS,W,aCUNC,MAnBf,SAAeV,GACb,OACE,oCACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,aAAaD,EAAMW,UACjC,4BACEV,UAAU,yBACVC,QAAS,kBAAMF,EAAMY,qBAFvB,iBAOF,wBAAIX,UAAU,WAAd,UACUD,EAAMa,MADhB,gBACoCb,EAAMc,a,MCTjCC,MAJf,SAAiBf,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,WC8E1BK,E,2MA3EbC,MAAQ,CACNC,UACAL,MAAO,EACPC,UAAW,EACXK,MAAM,G,EAGRhB,gBAAkB,SAAAC,GAChB,EAAKa,MAAMC,QAAQE,MAAK,SAACC,EAAOC,GAC9B,GAAID,EAAMjB,KAAOA,EAAI,CACnB,GAAyB,IAArBc,EAAQI,GAAGC,MAOb,OANAL,EAAQI,GAAGC,MAAQL,EAAQI,GAAGC,MAAQ,EACtC,EAAKC,SAAS,CAAEX,MAAO,EAAKI,MAAMJ,MAAQ,IAAK,WAC7CY,QAAQC,IAAIC,KAAKV,MAAMJ,UAEzB,EAAKI,MAAMC,QAAQU,MAAK,kBAAMC,KAAKC,SAAW,MAC9C,EAAKC,YACE,EAEP,EAAKC,WAGT,OAAO,M,EAIXA,SAAW,WACT,EAAKC,YACD,EAAKhB,MAAMJ,MAAQ,EAAKI,MAAMH,WAChC,EAAKU,SAAS,CAAEV,UAAY,EAAKG,MAAMH,UAAY,EAAKG,MAAMJ,QAEhE,EAAKW,SAAS,CAAEX,MAAO,EAAKI,MAAMJ,MAAQ,EAAKI,MAAMJ,QACrD,IAAK,IAAIS,EAAI,EAAGA,EAAIJ,EAAQgB,OAAQZ,IAClCJ,EAAQI,GAAGC,MAAQ,G,EAIvBQ,SAAW,WACTI,SAASC,eAAe,SAASjB,Q,EAGnCc,UAAY,WACVE,SAASC,eAAe,UAAUjB,Q,EAGpCP,iBAAmB,WACjByB,MACE,qO,wEAIM,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACExB,MAAOc,KAAKV,MAAMJ,MAClBC,UAAWa,KAAKV,MAAMH,UACtBF,iBAAkBe,KAAKf,kBAHzB,yBAOCe,KAAKV,MAAMC,QAAQoB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACEpC,gBAAiB,EAAKA,gBACtBE,IAAKkC,EAAOnC,GACZA,GAAImC,EAAOnC,GACXG,KAAMgC,EAAOhC,KACbE,MAAO8B,EAAO9B,gB,GApER+B,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASP,SAASC,eAAe,W","file":"static/js/main.396adecd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction DogCard(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <img\r\n          onClick={() => props.handleIncrement(props.id)}\r\n          key={props.id}\r\n          id={props.id}\r\n          alt={props.name}\r\n          src={props.image}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">{props.children}</h1>\r\n        <button\r\n          className=\"btn btn-primary btn-lg\"\r\n          onClick={() => props.showInstructions()}\r\n        >\r\n          Instructions\r\n        </button>\r\n      </div>\r\n      <h2 className=\"counter\">\r\n        Score: {props.score} High Score: {props.highScore}\r\n      </h2>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport DogCard from \"./components/cards/index\";\r\nimport options from \"./options.json\";\r\nimport Title from \"./components/Title/index\";\r\nimport Wrapper from \"./components/Wrapper/index\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    options,\r\n    score: 0,\r\n    highScore: 0,\r\n    play: false\r\n  };\r\n\r\n  handleIncrement = id => {\r\n    this.state.options.find((Param, i) => {\r\n      if (Param.id === id) {\r\n        if (options[i].count === 0) {\r\n          options[i].count = options[i].count + 1;\r\n          this.setState({ score: this.state.score + 1 }, function() {\r\n            console.log(this.state.score);\r\n          });\r\n          this.state.options.sort(() => Math.random() - 0.5);\r\n          this.playBark();\r\n          return true;\r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n\r\n  gameOver = () => {\r\n    this.playWhine();\r\n    if (this.state.score > this.state.highScore) {\r\n      this.setState({ highScore: (this.state.highScore = this.state.score) });\r\n    }\r\n    this.setState({ score: this.state.score - this.state.score });\r\n    for (let i = 0; i < options.length; i++) {\r\n      options[i].count = 0;\r\n    }\r\n  };\r\n\r\n  playBark = () => {\r\n    document.getElementById(\"audio\").play();\r\n  };\r\n\r\n  playWhine = () => {\r\n    document.getElementById(\"audio2\").play();\r\n  };\r\n\r\n  showInstructions = () => {\r\n    alert(\r\n      \"The dogs have gotten loose! Round up the pups by clicking on each one. Be mindful of which ones you've already herded up- clicking on the same dog twice will allow them all to escape again! Go ahead, try to gather up all 12!\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          showInstructions={this.showInstructions}\r\n        >\r\n          Who let the dogs out?\r\n        </Title>\r\n        {this.state.options.map(option => (\r\n          <DogCard\r\n            handleIncrement={this.handleIncrement}\r\n            key={option.id}\r\n            id={option.id}\r\n            name={option.name}\r\n            image={option.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}